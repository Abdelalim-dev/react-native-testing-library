(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{148:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(1),i=n(9),r=(n(0),n(159)),o={id:"getting-started",title:"Getting Started"},s={id:"getting-started",title:"Getting Started",description:"## The problem",source:"@site/docs/GettingStarted.md",permalink:"/react-native-testing-library/docs/getting-started",editUrl:"https://github.com/callstack/react-native-testing-library/blob/master/docs/GettingStarted.md",sidebar:"docs",next:{title:"API",permalink:"/react-native-testing-library/docs/api"}},l=[{value:"The problem",id:"the-problem",children:[]},{value:"This solution",id:"this-solution",children:[]},{value:"Example",id:"example",children:[]},{value:"Installation",id:"installation",children:[]}],c={rightToc:l};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"the-problem"},"The problem"),Object(r.b)("p",null,"You want to write maintainable tests for your React Native components without testing implementation details, but then you're told to use Enzyme, which you learn has no React Native adapter, meaning only shallow rendering is supported. And you want to render deep! But deep rendering may otherwise require jsdom (React Native isn't the web!), while doing deep rendering with ",Object(r.b)("inlineCode",{parentName:"p"},"react-test-renderer")," is so painful."),Object(r.b)("p",null,"You would also like to use the newest React features, but you need to wait for your testing library's abstractions to catch up and it takes a while."),Object(r.b)("p",null,"You finally want to approach testing using only best practices, while Enzyme may encourage assertions on implementation details."),Object(r.b)("h2",{id:"this-solution"},"This solution"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"react-native-testing-library")," is a lightweight solution for testing your React Native components. It provides light utility functions on top of ",Object(r.b)("inlineCode",{parentName:"p"},"react-test-renderer")," letting you always be up to date with latest React features and write any component tests you like. It also prevents you from testing implementation details because we believe this is a very bad practice."),Object(r.b)("p",null,"This library is a replacement for ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://airbnb.io/enzyme/"}),"Enzyme"),"."),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"import { render, fireEvent } from 'react-native-testing-library';\nimport { QuestionsBoard } from '../QuestionsBoard';\n\ntest('form submits two answers', () => {\n  const allQuestions = ['q1', 'q2'];\n  const mockFn = jest.fn();\n\n  const { getAllByA11yLabel, getByText } = render(\n    <QuestionsBoard questions={allQuestions} onSubmit={mockFn} />\n  );\n\n  const answerInputs = getAllByA11yLabel('answer input');\n\n  fireEvent.changeText(answerInputs[0], 'a1');\n  fireEvent.changeText(answerInputs[1], 'a2');\n  fireEvent.press(getByText('Submit'));\n\n  expect(mockFn).toBeCalledWith({\n    '1': { q: 'q1', a: 'a1' },\n    '2': { q: 'q2', a: 'a2' },\n  });\n});\n")),Object(r.b)("p",null,"You can find the source of ",Object(r.b)("inlineCode",{parentName:"p"},"QuestionsBoard")," component and this example ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/callstack/react-native-testing-library/blob/master/src/__tests__/questionsBoard.test.js"}),"here"),"."),Object(r.b)("h2",{id:"installation"},"Installation"),Object(r.b)("p",null,"Open a Terminal in your project's folder and run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"yarn add --dev react-native-testing-library\n")),Object(r.b)("p",null,"This library has a peerDependencies listing for ",Object(r.b)("inlineCode",{parentName:"p"},"react-test-renderer")," and, of course, ",Object(r.b)("inlineCode",{parentName:"p"},"react"),". Make sure to install them too!"),Object(r.b)("p",null,"As you may have noticed, it's not tied to React Native at all \u2013 you can safely use it in your React components if you feel like not interacting directly with DOM."))}b.isMDXComponent=!0}}]);